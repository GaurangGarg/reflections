How did viewing a diff between two versions of a file help you see the bug that
was introduced?

It was helpful because it pinpointed the differences between the two files and 
showed clearly where the typo was in the new file.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

As a programmer, I won't have to create backup files each time I make a revision
to a file. This will reduce disk usage as well as help find changes between files
efficiently.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

Better to have 1 commit per logical change.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

Git allows saving mutiple files in one commit since the files may be logically 
related to each other. The changes made to all files are all for the same bug or
feature.3

How can you use the commands git log and git diff to view the history of files?

Use git log to get commit ids, use git diff to get diffs betweeen commits.

How might using version control make you more confident to make changes that
could break something?

Using git checkout, we can revert our code to a version where it doesn't break.

Now that you have your workspace set up, what do you want to try using Git for?

    Fill in your answer here
